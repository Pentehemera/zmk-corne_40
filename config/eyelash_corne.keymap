#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE        &kp Q  &kp W  &kp E         &kp R      &kp T                         &kp UP                &kp Y  &kp U             &kp I      &kp O    &kp P      &kp BSPC
&kp LEFT_CONTROL  &kp A  &kp S  &kp D         &kp F      &kp G               &kp LEFT  &kp ENTER  &kp RIGHT  &kp H  &kp J             &kp K      &kp L    &kp ENTER  &kp TAB
&kp LEFT_SHIFT    &kp Z  &kp X  &kp C         &kp V      &kp B  &kp SPACE              &kp DOWN              &kp N  &kp M             &kp COMMA  &kp DOT  &kp FSLH   &mo 4
                                &kp LEFT_ALT  &kp SPACE  &mo 1                                               &mo 2  &kp LEFT_COMMAND  &mo 3
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp ESCAPE  &kp N1     &kp N2     &kp N3  &kp N4  &kp N5                                &mmv MOVE_UP                     &kp N6            &kp N7             &kp N8         &kp N9     &kp N0  &kp BSPC
&trans      &kp MINUS  &kt EQUAL  &trans  &trans  &trans                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SEMICOLON  &kp COMMA  &trans  &trans
&trans      &kp GRAVE  &trans     &trans  &trans  &trans  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp BACKSLASH     &trans             &trans         &trans     &trans  &trans
                                  &trans  &trans  &trans                                                                 &trans            &trans             &trans
            >;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL        &kp AT    &kp HASH  &kp DLLR  &kp PRCNT                            &mmv MOVE_UP                     &kp CARET       &kp AMPS         &kp ASTRK      &kp LPAR           &kp RPAR      &kp BSPC
&trans  &kp UNDERSCORE  &kp PLUS  &trans    &trans    &trans               &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp COLON      &kp DOUBLE_QUOTES  &trans        &trans
&trans  &kp TILDE       &trans    &trans    &trans    &trans     &trans                    &mmv MOVE_DOWN                   &kp PIPE        &trans           &kp LESS_THAN  &kp GREATER_THAN   &kp QUESTION  &trans
                                  &trans    &trans    &trans                                                                &trans          &trans           &trans
            >;
        };

        super {
            bindings = <
&trans  &trans          &kp UP_ARROW    &trans           &trans  &trans                    &trans          &trans  &trans  &kp NUMBER_7  &kp NUMBER_8  &kt NUMBER_9  &trans
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans            &trans  &trans  &trans  &trans  &trans  &kp NUMBER_4  &kp NUMBER_5  &kt NUMBER_6  &trans
&trans  &trans          &trans          &trans           &trans  &trans  &trans            &trans          &trans  &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0
                                        &trans           &trans  &trans                                    &trans  &trans  &trans
            >;
        };

        func {
            display-name = "func";
            bindings = <
&kp K_MUTE         &kp F1           &kp F2           &kp F3           &kp F4           &kp F5                                &mmv MOVE_UP                     &kp F6           &kp F7           &kp F8  &kp F9  &kp F10  &kp F11
&kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &bt BT_PRV       &bt BT_NXT       &trans           &trans                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &trans  &trans  &trans   &kp F12
&rgb_ug RGB_TOG    &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &trans  &kp C_MUTE                    &mmv MOVE_DOWN                   &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &trans  &trans  &trans   &trans
                                                     &trans           &trans           &trans                                                                 &trans           &trans           &trans
            >;
        };
    };
};
